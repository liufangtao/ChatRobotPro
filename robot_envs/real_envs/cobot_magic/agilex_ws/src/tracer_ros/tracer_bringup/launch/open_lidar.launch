<?xml version='1'?>
<launch>
    <!--<include file="$(find serial_imu)/launch/imu_msg.launch">
    </include>-->
    <!-- <include file="$(find rslidar_sdk)/launch/start.launch">  -->
    
    <!--<include file="$(find rslidar_pointcloud)/launch/rs_lidar_16.launch">
    </include>-->
        <include file="$(find livox_ros_driver2)/launch/rviz_MID360.launch">
    </include>
    <include file="$(find pointcloud_to_laserscan)/launch/point_to_scan.launch">
    </include>

     <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" 
     args="-0.3032 0 0.059972 0.0 0.0 0.0 livox_frame dummy_base_link 100"/>
<!--     <node pkg="laser_scan_matcher" type="laser_scan_matcher_node"
     name="laser_scan_matcher_node" output="screen">
     <param name="fixed_frame" value="odom"/>
     <param name="max_iterations" value="10"/>

     <param name="base_frame" value="base_link"/>
     <param name="use_odom" value="false" />
     <param name="use_imu" value="false" />
     <param name="publy_pose" value = "true" />
     <param name="publy_tf" value="true" />
     </node>-->
     
   <node pkg="rf2o_laser_odometry" type="rf2o_laser_odometry_node" name="rf2o_laser_odometry" output="screen">
    <param name="laser_scan_topic" value="/scan"/>        # topic where the lidar scans are being published
    <param name="odom_topic" value="/odom" />              # topic where tu publish the odometry estimations
    
    <param name="base_frame_id" value="livox_frame"/>            # frame_id (tf) of the mobile robot base. A tf transform from the laser_frame to the base_frame is mandatory
    <param name="odom_frame_id" value="odom" />                # frame_id (tf) to publish the odometry estimations  
    <param name="publish_tf" value="true" />                   # wheter or not to publish the tf::transform (base->odom)  
    <param name="init_pose_from_topic" value="" /> # (Odom topic) Leave empty to start at point (0,0)
    <param name="freq" value="10.0"/>                            # Execution frequency.
    <param name="verbose" value="true" />                       # verbose
  </node>
</launch>
